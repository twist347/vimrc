-- üìå –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
vim.opt.number = true
vim.opt.expandtab = true
vim.opt.shiftwidth = 4
vim.opt.tabstop = 4
vim.opt.smartindent = true
vim.opt.termguicolors = true
vim.opt.syntax = "on"

-- üìå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ lazy.nvim (–µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç)
local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
    vim.fn.system({
        "git", "clone", "--filter=blob:none",
        "https://github.com/folke/lazy.nvim.git", "--branch=stable", lazypath
    })
end
vim.opt.rtp:prepend(lazypath)

-- üìå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–æ–≤
require("lazy").setup({
    "neovim/nvim-lspconfig",        -- LSP (clangd)
    "hrsh7th/nvim-cmp",             -- –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    "hrsh7th/cmp-nvim-lsp",         -- LSP –≤ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–∏
    "nvim-tree/nvim-tree.lua",      -- –§–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
    "nvim-telescope/telescope.nvim", -- –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤
    "mfussenegger/nvim-dap",        -- –û—Ç–ª–∞–¥—á–∏–∫
    "mhartington/formatter.nvim",   -- –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    "nvim-lualine/lualine.nvim",    -- –°—Ç–∞—Ç—É—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
    "windwp/nvim-autopairs",        -- –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ —Å–∫–æ–±–æ–∫
    "folke/tokyonight.nvim",        -- –¢–µ–º–∞
    "NLKNguyen/papercolor-theme",
    "akinsho/toggleterm.nvim"       -- –¢–µ—Ä–º–∏–Ω–∞–ª –¥–ª—è —Å–±–æ—Ä–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞
})

-- üìå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã
vim.cmd("colorscheme tokyonight")

-- üìå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ LSP (clangd –¥–ª—è C++)
local lspconfig = require("lspconfig")
lspconfig.clangd.setup({
    on_attach = function(client, bufnr)
        local opts = { noremap = true, silent = true, buffer = bufnr }
        vim.keymap.set("n", "gd", vim.lsp.buf.definition, opts)
        vim.keymap.set("n", "<C-o>", vim.lsp.buf.references, opts)
    end,
})

-- üìå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
local cmp = require("cmp")
cmp.setup({
    mapping = cmp.mapping.preset.insert({
        ['<Tab>'] = cmp.mapping.select_next_item(),
        ['<S-Tab>'] = cmp.mapping.select_prev_item(),
        ['<CR>'] = cmp.mapping.confirm({ select = true }),
    }),
    sources = cmp.config.sources({
        { name = "nvim_lsp" },
    }),
})

-- üìå –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ —Å–∫–æ–±–æ–∫
require("nvim-autopairs").setup({
    check_ts = true,
    disable_filetype = { "TelescopePrompt" },
})

-- üìå –§–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
require("nvim-tree").setup()

-- üìå –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ (clang-format)
require("formatter").setup({
    filetype = {
        cpp = {
            function()
                return {
                    exe = "clang-format",
                    args = {},
                    stdin = true
                }
            end
        }
    }
})

-- üìå –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ (Telescope)
vim.api.nvim_set_keymap("n", "<leader>ff", ":Telescope find_files<CR>", { noremap = true, silent = true })
vim.api.nvim_set_keymap("n", "<leader>fg", ":Telescope live_grep<CR>", { noremap = true, silent = true })

-- üìå –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
vim.api.nvim_set_keymap("n", "<leader>e", ":NvimTreeToggle<CR>", { noremap = true, silent = true })

-- üìå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ (–¥–ª—è —Å–±–æ—Ä–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞)
require("toggleterm").setup({
    direction = "float",
    shell = "/bin/bash",
    close_on_exit = false
})

-- üìå –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∏ –∑–∞–ø—É—Å–∫–∞ C++
function CompileAndRun()
    local file = vim.fn.expand("%")         -- –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
    local output = vim.fn.expand("%:r")     -- –ò–º—è –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
    local cmd = "g++ " .. file .. " -o " .. output .. " && ./" .. output

    require("toggleterm.terminal").Terminal
        :new({ cmd = cmd, direction = "float", close_on_exit = false })
        :toggle()
end

-- üìå –ì–æ—Ä—è—á–∞—è –∫–ª–∞–≤–∏—à–∞ –¥–ª—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∏ –∑–∞–ø—É—Å–∫–∞
vim.api.nvim_set_keymap("n", "<leader>r", ":lua CompileAndRun()<CR>", { noremap = true, silent = true })

